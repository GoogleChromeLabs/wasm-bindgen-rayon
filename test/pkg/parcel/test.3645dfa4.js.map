{"mappings":"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","sources":["pkg/test.js","pkg/snippets/wasm-bindgen-rayon-7afa899f36665473/src/workerHelpers.js","node_modules/@parcel/runtime-js/lib/runtime-3d2772513137a0e4.js","node_modules/@parcel/runtime-js/lib/helpers/worker/js-loader.js","node_modules/@parcel/runtime-js/lib/helpers/cacheLoader.js","node_modules/@parcel/runtime-js/lib/helpers/bundle-url.js","node_modules/@parcel/runtime-js/lib/helpers/bundle-manifest.js","node_modules/@parcel/runtime-js/lib/runtime-7ef916e013bc89b5.js","node_modules/@parcel/runtime-js/lib/helpers/get-worker-url.js","node_modules/@parcel/runtime-js/lib/runtime-a1d9adfa282b7dc8.js"],"sourcesContent":["import { startWorkers } from './snippets/wasm-bindgen-rayon-7afa899f36665473/src/workerHelpers.js';\n\nlet wasm;\n\nconst cachedTextDecoder = new TextDecoder('utf-8', { ignoreBOM: true, fatal: true });\n\ncachedTextDecoder.decode();\n\nlet cachedUint8Memory0 = new Uint8Array();\n\nfunction getUint8Memory0() {\n    if (cachedUint8Memory0.buffer !== wasm.memory.buffer) {\n        cachedUint8Memory0 = new Uint8Array(wasm.memory.buffer);\n    }\n    return cachedUint8Memory0;\n}\n\nfunction getStringFromWasm0(ptr, len) {\n    return cachedTextDecoder.decode(getUint8Memory0().slice(ptr, ptr + len));\n}\n\nconst heap = new Array(32).fill(undefined);\n\nheap.push(undefined, null, true, false);\n\nlet heap_next = heap.length;\n\nfunction addHeapObject(obj) {\n    if (heap_next === heap.length) heap.push(heap.length + 1);\n    const idx = heap_next;\n    heap_next = heap[idx];\n\n    heap[idx] = obj;\n    return idx;\n}\n\nlet cachedUint32Memory0 = new Uint32Array();\n\nfunction getUint32Memory0() {\n    if (cachedUint32Memory0.buffer !== wasm.memory.buffer) {\n        cachedUint32Memory0 = new Uint32Array(wasm.memory.buffer);\n    }\n    return cachedUint32Memory0;\n}\n\nlet WASM_VECTOR_LEN = 0;\n\nfunction passArray32ToWasm0(arg, malloc) {\n    const ptr = malloc(arg.length * 4);\n    getUint32Memory0().set(arg, ptr / 4);\n    WASM_VECTOR_LEN = arg.length;\n    return ptr;\n}\n/**\n* @param {Int32Array} numbers\n* @returns {number}\n*/\nexport function sum(numbers) {\n    const ptr0 = passArray32ToWasm0(numbers, wasm.__wbindgen_malloc);\n    const len0 = WASM_VECTOR_LEN;\n    const ret = wasm.sum(ptr0, len0);\n    return ret;\n}\n\nfunction getObject(idx) { return heap[idx]; }\n\nfunction dropObject(idx) {\n    if (idx < 36) return;\n    heap[idx] = heap_next;\n    heap_next = idx;\n}\n\nfunction takeObject(idx) {\n    const ret = getObject(idx);\n    dropObject(idx);\n    return ret;\n}\n/**\n* @param {number} num_threads\n* @returns {Promise<any>}\n*/\nexport function initThreadPool(num_threads) {\n    const ret = wasm.initThreadPool(num_threads);\n    return takeObject(ret);\n}\n\n/**\n* @param {number} receiver\n*/\nexport function wbg_rayon_start_worker(receiver) {\n    wasm.wbg_rayon_start_worker(receiver);\n}\n\n/**\n*/\nexport class wbg_rayon_PoolBuilder {\n\n    static __wrap(ptr) {\n        const obj = Object.create(wbg_rayon_PoolBuilder.prototype);\n        obj.ptr = ptr;\n\n        return obj;\n    }\n\n    __destroy_into_raw() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm.__wbg_wbg_rayon_poolbuilder_free(ptr);\n    }\n    /**\n    * @returns {number}\n    */\n    numThreads() {\n        const ret = wasm.wbg_rayon_poolbuilder_numThreads(this.ptr);\n        return ret >>> 0;\n    }\n    /**\n    * @returns {number}\n    */\n    receiver() {\n        const ret = wasm.wbg_rayon_poolbuilder_receiver(this.ptr);\n        return ret;\n    }\n    /**\n    */\n    build() {\n        wasm.wbg_rayon_poolbuilder_build(this.ptr);\n    }\n}\n\nasync function load(module, imports) {\n    if (typeof Response === 'function' && module instanceof Response) {\n        if (typeof WebAssembly.instantiateStreaming === 'function') {\n            try {\n                return await WebAssembly.instantiateStreaming(module, imports);\n\n            } catch (e) {\n                if (module.headers.get('Content-Type') != 'application/wasm') {\n                    console.warn(\"`WebAssembly.instantiateStreaming` failed because your server does not serve wasm with `application/wasm` MIME type. Falling back to `WebAssembly.instantiate` which is slower. Original error:\\n\", e);\n\n                } else {\n                    throw e;\n                }\n            }\n        }\n\n        const bytes = await module.arrayBuffer();\n        return await WebAssembly.instantiate(bytes, imports);\n\n    } else {\n        const instance = await WebAssembly.instantiate(module, imports);\n\n        if (instance instanceof WebAssembly.Instance) {\n            return { instance, module };\n\n        } else {\n            return instance;\n        }\n    }\n}\n\nfunction getImports() {\n    const imports = {};\n    imports.wbg = {};\n    imports.wbg.__wbindgen_throw = function(arg0, arg1) {\n        throw new Error(getStringFromWasm0(arg0, arg1));\n    };\n    imports.wbg.__wbindgen_module = function() {\n        const ret = init.__wbindgen_wasm_module;\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbindgen_memory = function() {\n        const ret = wasm.memory;\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_startWorkers_6fd3af285ea11136 = function(arg0, arg1, arg2) {\n        const ret = startWorkers(takeObject(arg0), takeObject(arg1), wbg_rayon_PoolBuilder.__wrap(arg2));\n        return addHeapObject(ret);\n    };\n\n    return imports;\n}\n\nfunction initMemory(imports, maybe_memory) {\n    imports.wbg.memory = maybe_memory || new WebAssembly.Memory({initial:18,maximum:16384,shared:true});\n}\n\nfunction finalizeInit(instance, module) {\n    wasm = instance.exports;\n    init.__wbindgen_wasm_module = module;\n    cachedUint32Memory0 = new Uint32Array();\n    cachedUint8Memory0 = new Uint8Array();\n\n    wasm.__wbindgen_start();\n    return wasm;\n}\n\nfunction initSync(module, maybe_memory) {\n    const imports = getImports();\n\n    initMemory(imports, maybe_memory);\n\n    if (!(module instanceof WebAssembly.Module)) {\n        module = new WebAssembly.Module(module);\n    }\n\n    const instance = new WebAssembly.Instance(module, imports);\n\n    return finalizeInit(instance, module);\n}\n\nasync function init(input, maybe_memory) {\n    if (typeof input === 'undefined') {\n        input = new URL('test_bg.wasm', import.meta.url);\n    }\n    const imports = getImports();\n\n    if (typeof input === 'string' || (typeof Request === 'function' && input instanceof Request) || (typeof URL === 'function' && input instanceof URL)) {\n        input = fetch(input);\n    }\n\n    initMemory(imports, maybe_memory);\n\n    const { instance, module } = await load(await input, imports);\n\n    return finalizeInit(instance, module);\n}\n\nexport { initSync }\nexport default init;\n","/*\r\n * Copyright 2022 Google Inc. All Rights Reserved.\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *     http://www.apache.org/licenses/LICENSE-2.0\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\n// Note: we use `wasm_bindgen_worker_`-prefixed message types to make sure\r\n// we can handle bundling into other files, which might happen to have their\r\n// own `postMessage`/`onmessage` communication channels.\r\n//\r\n// If we didn't take that into the account, we could send much simpler signals\r\n// like just `0` or whatever, but the code would be less resilient.\r\n\r\nfunction waitForMsgType(target, type) {\r\n  return new Promise(resolve => {\r\n    target.addEventListener('message', function onMsg({ data }) {\r\n      if (data == null || data.type !== type) return;\r\n      target.removeEventListener('message', onMsg);\r\n      resolve(data);\r\n    });\r\n  });\r\n}\r\n\r\nwaitForMsgType(self, 'wasm_bindgen_worker_init').then(async data => {\r\n  // # Note 1\r\n  // Our JS should have been generated in\r\n  // `[out-dir]/snippets/wasm-bindgen-rayon-[hash]/workerHelpers.js`,\r\n  // resolve the main module via `../../..`.\r\n  //\r\n  // This might need updating if the generated structure changes on wasm-bindgen\r\n  // side ever in the future, but works well with bundlers today. The whole\r\n  // point of this crate, after all, is to abstract away unstable features\r\n  // and temporary bugs so that you don't need to deal with them in your code.\r\n  //\r\n  // # Note 2\r\n  // This could be a regular import, but then some bundlers complain about\r\n  // circular deps.\r\n  //\r\n  // Dynamic import could be cheap if this file was inlined into the parent,\r\n  // which would require us just using `../../..` in `new Worker` below,\r\n  // but that doesn't work because wasm-pack unconditionally adds\r\n  // \"sideEffects\":false (see below).\r\n  //\r\n  // OTOH, even though it can't be inlined, it should be still reasonably\r\n  // cheap since the requested file is already in cache (it was loaded by\r\n  // the main thread).\r\n  const pkg = await import('../../..');\r\n  await pkg.default(data.module, data.memory);\r\n  postMessage({ type: 'wasm_bindgen_worker_ready' });\r\n  pkg.wbg_rayon_start_worker(data.receiver);\r\n});\r\n\r\n// Note: this is never used, but necessary to prevent a bug in Firefox\r\n// (https://bugzilla.mozilla.org/show_bug.cgi?id=1702191) where it collects\r\n// Web Workers that have a shared WebAssembly memory with the main thread,\r\n// but are not explicitly rooted via a `Worker` instance.\r\n//\r\n// By storing them in a variable, we can keep `Worker` objects around and\r\n// prevent them from getting GC-d.\r\nlet _workers;\r\n\r\nexport async function startWorkers(module, memory, builder) {\r\n  if (builder.numThreads() === 0) {\r\n    throw new Error(`num_threads must be > 0.`);\r\n  }\r\n\r\n  const workerInit = {\r\n    type: 'wasm_bindgen_worker_init',\r\n    module,\r\n    memory,\r\n    receiver: builder.receiver()\r\n  };\r\n\r\n  _workers = await Promise.all(\r\n    Array.from({ length: builder.numThreads() }, async () => {\r\n      // Self-spawn into a new Worker.\r\n      //\r\n      // TODO: while `new URL('...', import.meta.url) becomes a semi-standard\r\n      // way to get asset URLs relative to the module across various bundlers\r\n      // and browser, ideally we should switch to `import.meta.resolve`\r\n      // once it becomes a standard.\r\n      //\r\n      // Note: we could use `../../..` as the URL here to inline workerHelpers.js\r\n      // into the parent entry instead of creating another split point -\r\n      // this would be preferable from optimization perspective -\r\n      // however, Webpack then eliminates all message handler code\r\n      // because wasm-pack produces \"sideEffects\":false in package.json\r\n      // unconditionally.\r\n      //\r\n      // The only way to work around that is to have side effect code\r\n      // in an entry point such as Worker file itself.\r\n      const worker = new Worker(new URL('./workerHelpers.js', import.meta.url), {\r\n        type: 'module'\r\n      });\r\n      worker.postMessage(workerInit);\r\n      await waitForMsgType(worker, 'wasm_bindgen_worker_ready');\r\n      return worker;\r\n    })\r\n  );\r\n  builder.build();\r\n}\r\n","module.exports = (require(\"./helpers/worker/js-loader\")(require('./helpers/bundle-url').getBundleURL('55I7O') + require('./helpers/bundle-manifest').resolve(\"55I7O\"))).then(() => parcelRequire('lyMph'));","\"use strict\";\n\n/* global __parcel__importScripts__:readonly*/\nvar cacheLoader = require('../cacheLoader');\n\nmodule.exports = cacheLoader(function (bundle) {\n  return new Promise(function (resolve, reject) {\n    try {\n      __parcel__importScripts__(bundle);\n\n      resolve();\n    } catch (e) {\n      reject(e);\n    }\n  });\n});","\"use strict\";\n\nvar cachedBundles = {};\nvar cachedPreloads = {};\nvar cachedPrefetches = {};\n\nfunction getCache(type) {\n  switch (type) {\n    case 'preload':\n      return cachedPreloads;\n\n    case 'prefetch':\n      return cachedPrefetches;\n\n    default:\n      return cachedBundles;\n  }\n}\n\nmodule.exports = function (loader, type) {\n  return function (bundle) {\n    var cache = getCache(type);\n\n    if (cache[bundle]) {\n      return cache[bundle];\n    }\n\n    return cache[bundle] = loader.apply(null, arguments).catch(function (e) {\n      delete cache[bundle];\n      throw e;\n    });\n  };\n};","\"use strict\";\n\nvar bundleURL = {};\n\nfunction getBundleURLCached(id) {\n  var value = bundleURL[id];\n\n  if (!value) {\n    value = getBundleURL();\n    bundleURL[id] = value;\n  }\n\n  return value;\n}\n\nfunction getBundleURL() {\n  try {\n    throw new Error();\n  } catch (err) {\n    var matches = ('' + err.stack).match(/(https?|file|ftp|(chrome|moz|safari-web)-extension):\\/\\/[^)\\n]+/g);\n\n    if (matches) {\n      // The first two stack frames will be this function and getBundleURLCached.\n      // Use the 3rd one, which will be a runtime in the original bundle.\n      return getBaseURL(matches[2]);\n    }\n  }\n\n  return '/';\n}\n\nfunction getBaseURL(url) {\n  return ('' + url).replace(/^((?:https?|file|ftp|(chrome|moz|safari-web)-extension):\\/\\/.+)\\/[^/]+$/, '$1') + '/';\n} // TODO: Replace uses with `new URL(url).origin` when ie11 is no longer supported.\n\n\nfunction getOrigin(url) {\n  var matches = ('' + url).match(/(https?|file|ftp|(chrome|moz|safari-web)-extension):\\/\\/[^/]+/);\n\n  if (!matches) {\n    throw new Error('Origin not found');\n  }\n\n  return matches[0];\n}\n\nexports.getBundleURL = getBundleURLCached;\nexports.getBaseURL = getBaseURL;\nexports.getOrigin = getOrigin;","\"use strict\";\n\nvar mapping = {};\n\nfunction register(pairs) {\n  var keys = Object.keys(pairs);\n\n  for (var i = 0; i < keys.length; i++) {\n    mapping[keys[i]] = pairs[keys[i]];\n  }\n}\n\nfunction resolve(id) {\n  var resolved = mapping[id];\n\n  if (resolved == null) {\n    throw new Error('Could not resolve bundle with id ' + id);\n  }\n\n  return resolved;\n}\n\nmodule.exports.register = register;\nmodule.exports.resolve = resolve;","let workerURL = require('./helpers/get-worker-url');\nlet bundleURL = require('./helpers/bundle-url');\nlet url = bundleURL.getBundleURL('55I7O') + require('./helpers/bundle-manifest').resolve(\"ldTKI\");module.exports = workerURL(url, bundleURL.getOrigin(url), false);","\"use strict\";\n\nmodule.exports = function (workerUrl, origin, isESM) {\n  if (origin === self.location.origin) {\n    // If the worker bundle's url is on the same origin as the document,\n    // use the worker bundle's own url.\n    return workerUrl;\n  } else {\n    // Otherwise, create a blob URL which loads the worker bundle with `importScripts`.\n    var source = isESM ? 'import ' + JSON.stringify(workerUrl) + ';' : 'importScripts(' + JSON.stringify(workerUrl) + ');';\n    return URL.createObjectURL(new Blob([source], {\n      type: 'application/javascript'\n    }));\n  }\n};","module.exports = require('./helpers/bundle-url').getBundleURL('55I7O') + require('./helpers/bundle-manifest').resolve(\"5Je0b\");"],"names":["$eOdZf","parcelRequire","$fb225284012d8e11$var$wasm","$fb225284012d8e11$var$cachedTextDecoder","TextDecoder","ignoreBOM","fatal","decode","$fb225284012d8e11$var$cachedUint8Memory0","Uint8Array","$fb225284012d8e11$var$getStringFromWasm0","ptr","len","buffer","memory","slice","$fb225284012d8e11$var$heap","Array","fill","undefined","push","$fb225284012d8e11$var$heap_next","length","$fb225284012d8e11$var$addHeapObject","obj","idx","$fb225284012d8e11$var$cachedUint32Memory0","Uint32Array","$fb225284012d8e11$var$WASM_VECTOR_LEN","$fb225284012d8e11$var$passArray32ToWasm0","arg","malloc","set","$fb225284012d8e11$export$8a63f25cc62965f1","numbers","ptr0","__wbindgen_malloc","len0","sum","$fb225284012d8e11$var$takeObject","ret","$fb225284012d8e11$var$getObject","$fb225284012d8e11$var$dropObject","$fb225284012d8e11$export$850bf34b7f8eeae7","num_threads","initThreadPool","$fb225284012d8e11$export$ad6f10d028b2dbf6","receiver","wbg_rayon_start_worker","$fb225284012d8e11$export$b4e714242155659","static","Object","create","prototype","__destroy_into_raw","this","free","__wbg_wbg_rayon_poolbuilder_free","numThreads","wbg_rayon_poolbuilder_numThreads","wbg_rayon_poolbuilder_receiver","build","wbg_rayon_poolbuilder_build","$fb225284012d8e11$var$getImports","imports","wbg","__wbindgen_throw","arg0","arg1","Error","__wbindgen_module","$fb225284012d8e11$var$init","__wbindgen_wasm_module","__wbindgen_memory","__wbg_startWorkers_6fd3af285ea11136","arg2","startWorkers","__wrap","$fb225284012d8e11$var$initMemory","maybe_memory","WebAssembly","Memory","initial","maximum","shared","$fb225284012d8e11$var$finalizeInit","instance","module","exports","__wbindgen_start","async","input","URL","Request","fetch","Response","instantiateStreaming","e","headers","get","console","warn","bytes","arrayBuffer","instantiate","Instance","$fb225284012d8e11$var$load","$fb225284012d8e11$export$2e2bcd8739ae039","$ac8095b6f72aa937$var$waitForMsgType","target","type","Promise","resolve","addEventListener","onMsg","data","removeEventListener","$ac8095b6f72aa937$export$6a13f9f53ddacde8","builder","workerInit","all","from","self","then","pkg","default","postMessage","getBundleURL","$90gdW","bundle","reject","importScripts","$68e0b2e0ca9293f2$var$cachedBundles","$68e0b2e0ca9293f2$var$cachedPreloads","$68e0b2e0ca9293f2$var$cachedPrefetches","$68e0b2e0ca9293f2$var$getCache","loader","cache","apply","arguments","catch","$01a32f7bf710fe19$export$bdfd709ae4826697","$01a32f7bf710fe19$export$5a759dc7a1cfb72a","$01a32f7bf710fe19$var$bundleURL","$01a32f7bf710fe19$var$getBaseURL","url","replace","id","value","err","matches","stack","match","$01a32f7bf710fe19$var$getBundleURL","$8831245f07480bee$export$6503ec6e8aabbaf","$8831245f07480bee$export$f7ad0328861e2f03","$8831245f07480bee$var$mapping","pairs","keys","i","resolved","$7YDMF","$9069115a34103f2e$var$url","$8IoA4","getOrigin","workerUrl","origin","isESM","location","source","JSON","stringify","createObjectURL","Blob"],"version":3,"file":"test.3645dfa4.js.map"}